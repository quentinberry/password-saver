{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quebe\\\\Documents\\\\Projects\\\\password_saver\\\\server\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { FaRegCopy } from \"react-icons/ai\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendData, setBackendData] = useState([{}]);\n  const [passwordHider, setPasswordHider] = useState('');\n  const [visible, setVisible] = React.useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/json\").then(res => res.json()).then(data => {\n      setBackendData(data);\n    });\n  }, []);\n  console.log(typeof backendData);\n  const hidePassword = pass => {\n    const passArray = pass.split('');\n    for (let i = 0; i < passArray.length; i++) {\n      passArray[i] = '*';\n    }\n    const hiddenPasswordShowcase = passArray.join('');\n    setPasswordHider(hiddenPasswordShowcase);\n    console.log(hiddenPasswordShowcase);\n  };\n  const state = {\n    value: backendData[0].Password,\n    copied: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: backendData.map(password => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entryShower\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: password.Titel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordField\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setVisible(!visible),\n            children: [\" \", visible ? '**********' : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: password.Password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 91\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: this.state.value,\n            onCopy: () => this.setState({\n              copied: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Copy to clipboard with span\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kSEgaj1z75ZAocuhESkrWWdHBiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FaRegCopy","CopyToClipboard","App","backendData","setBackendData","passwordHider","setPasswordHider","visible","setVisible","fetch","then","res","json","data","console","log","hidePassword","pass","passArray","split","i","length","hiddenPasswordShowcase","join","state","value","Password","copied","map","password","Titel","setState"],"sources":["C:/Users/quebe/Documents/Projects/password_saver/server/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FaRegCopy } from \"react-icons/ai\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nfunction App() {\r\n\r\n  const [backendData, setBackendData] = useState([{}]);\r\n  const [passwordHider, setPasswordHider] = useState('');\r\n  const [visible, setVisible] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/json\")\r\n      .then(\r\n        res => res.json())\r\n      .then(\r\n        data => {\r\n          setBackendData(data)\r\n        });\r\n  }, []);\r\n\r\n  console.log(typeof backendData);\r\n\r\n  const hidePassword = (pass) => {\r\n    const passArray = pass.split('');\r\n    for(let i = 0; i < passArray.length; i++){\r\n      passArray[i] = '*';\r\n    }\r\n    const hiddenPasswordShowcase = passArray.join('');\r\n    setPasswordHider(hiddenPasswordShowcase);\r\n    console.log(hiddenPasswordShowcase);\r\n  }\r\n\r\n  const state = {\r\n    value: backendData[0].Password,\r\n    copied: false,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        backendData.map(password => {\r\n          return(\r\n            <div className='entryShower'>\r\n              <p>{password.Titel}</p>\r\n                <div className='passwordField'>\r\n                  <button onClick={() => setVisible(!visible)}> {visible ? '**********' : <p>{password.Password}</p>} </button>\r\n                  <CopyToClipboard text={this.state.value}\r\n                    onCopy={() => this.setState({copied: true})}>\r\n                    <span>Copy to clipboard with span</span>\r\n                  </CopyToClipboard>\r\n                </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAAQC,eAAe,QAAO,yBAAyB;AAAC;AAExD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CACHG,IAAI,IAAI;MACNT,cAAc,CAACS,IAAI,CAAC;IACtB,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAAC,OAAOZ,WAAW,CAAC;EAE/B,MAAMa,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC;IAChC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MACvCF,SAAS,CAACE,CAAC,CAAC,GAAG,GAAG;IACpB;IACA,MAAME,sBAAsB,GAAGJ,SAAS,CAACK,IAAI,CAAC,EAAE,CAAC;IACjDjB,gBAAgB,CAACgB,sBAAsB,CAAC;IACxCR,OAAO,CAACC,GAAG,CAACO,sBAAsB,CAAC;EACrC,CAAC;EAED,MAAME,KAAK,GAAG;IACZC,KAAK,EAAEtB,WAAW,CAAC,CAAC,CAAC,CAACuB,QAAQ;IAC9BC,MAAM,EAAE;EACV,CAAC;EAED,oBACE;IAAA,UAEIxB,WAAW,CAACyB,GAAG,CAACC,QAAQ,IAAI;MAC1B,oBACE;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,UAAIA,QAAQ,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eACrB;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC5B;YAAQ,OAAO,EAAE,MAAMtB,UAAU,CAAC,CAACD,OAAO,CAAE;YAAA,gBAAGA,OAAO,GAAG,YAAY,gBAAG;cAAA,UAAIsB,QAAQ,CAACH;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eAC7G,QAAC,eAAe;YAAC,IAAI,EAAE,IAAI,CAACF,KAAK,CAACC,KAAM;YACtC,MAAM,EAAE,MAAM,IAAI,CAACM,QAAQ,CAAC;cAACJ,MAAM,EAAE;YAAI,CAAC,CAAE;YAAA,uBAC5C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAwC;YAAA;YAAA;YAAA;UAAA,QACxB;QAAA;UAAA;UAAA;UAAA;QAAA,QACd;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GArDQzB,GAAG;AAAA,KAAHA,GAAG;AAuDZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}