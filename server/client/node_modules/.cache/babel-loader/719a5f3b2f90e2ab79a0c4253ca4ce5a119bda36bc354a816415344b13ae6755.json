{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quebe\\\\Documents\\\\Projects\\\\password_saver\\\\server\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { FaRegCopy } from \"react-icons/ai\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendData, setBackendData] = useState([{}]);\n  const [passwordHider, setPasswordHider] = useState('');\n  const [visible, setVisible] = React.useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/json\").then(res => res.json()).then(data => {\n      setBackendData(data);\n    });\n  }, []);\n  const hidePassword = pass => {\n    const passArray = pass.split('');\n    for (let i = 0; i < passArray.length; i++) {\n      passArray[i] = '*';\n    }\n    const hiddenPasswordShowcase = passArray.join('');\n    setPasswordHider(hiddenPasswordShowcase);\n    console.log(hiddenPasswordShowcase);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [backendData.map(password => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entryShower\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Password: \", password.Titel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username/Email: \", password.Username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    }), backendData.map(password => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(!visible),\n        children: [\" \", visible ? '**********' : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: password.Password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 83\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kSEgaj1z75ZAocuhESkrWWdHBiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FaRegCopy","CopyToClipboard","App","backendData","setBackendData","passwordHider","setPasswordHider","visible","setVisible","fetch","then","res","json","data","hidePassword","pass","passArray","split","i","length","hiddenPasswordShowcase","join","console","log","map","password","Titel","Username","Password"],"sources":["C:/Users/quebe/Documents/Projects/password_saver/server/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FaRegCopy } from \"react-icons/ai\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [backendData, setBackendData] = useState([{}]);\r\n  const [passwordHider, setPasswordHider] = useState('');\r\n  const [visible, setVisible] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/json\")\r\n      .then(\r\n        res => res.json())\r\n      .then(\r\n        data => {\r\n          setBackendData(data)\r\n        });\r\n  }, []);\r\n\r\n  const hidePassword = (pass) => {\r\n    const passArray = pass.split('');\r\n    for(let i = 0; i < passArray.length; i++){\r\n      passArray[i] = '*';\r\n    }\r\n    const hiddenPasswordShowcase = passArray.join('');\r\n    setPasswordHider(hiddenPasswordShowcase);\r\n    console.log(hiddenPasswordShowcase);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        backendData.map(password => {\r\n          return(\r\n            <div className='entryShower'>\r\n              <p>Password: {password.Titel}</p>\r\n              <p>Username/Email: {password.Username}</p>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      {\r\n        backendData.map(password => {\r\n          return( \r\n          <button onClick={() => setVisible(!visible)}> {visible ? '**********' : <p>{password.Password}</p>} </button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAAQC,eAAe,QAAO,yBAAyB;AACvD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CACHC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACnBF,IAAI,CACHG,IAAI,IAAI;MACNT,cAAc,CAACS,IAAI,CAAC;IACtB,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC;IAChC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MACvCF,SAAS,CAACE,CAAC,CAAC,GAAG,GAAG;IACpB;IACA,MAAME,sBAAsB,GAAGJ,SAAS,CAACK,IAAI,CAAC,EAAE,CAAC;IACjDf,gBAAgB,CAACc,sBAAsB,CAAC;IACxCE,OAAO,CAACC,GAAG,CAACH,sBAAsB,CAAC;EACrC,CAAC;EAED,oBACE;IAAA,WAEIjB,WAAW,CAACqB,GAAG,CAACC,QAAQ,IAAI;MAC1B,oBACE;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,yBAAcA,QAAQ,CAACC,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACjC;UAAA,+BAAoBD,QAAQ,CAACE,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACtC;IAEV,CAAC,CAAC,EAGFxB,WAAW,CAACqB,GAAG,CAACC,QAAQ,IAAI;MAC1B,oBACA;QAAQ,OAAO,EAAE,MAAMjB,UAAU,CAAC,CAACD,OAAO,CAAE;QAAA,gBAAGA,OAAO,GAAG,YAAY,gBAAG;UAAA,UAAIkB,QAAQ,CAACG;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAE/G,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GA/CQ1B,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}